{"version":3,"sources":["Reducers/MainReducer.js","config.js","Api/ApiHandler.js","Api/Api.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["defaultState","path","pathSublist","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","Object","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","map","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","host","config","url_list","url_create_folder","url_get_content","url_download","url_upload","url_remove","url_rename","url_move","url_copy","url_edit","url_compress","url_extract","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","messageTranslation","unknown_response","TypeError: Failed to fetch","handleFetch","resolve","reject","xthen","response","contentType","headers","get","contentDisp","isJson","test","isAttachment","ok","json","Error","blob","then","success","code","data","xcatch","errorResponse","errJson","JSON","stringify","fixPath","replace","getFileList","Promise","fetch","encodeURIComponent","credentials","API","catch","getFileBody","filename","renameItem","newFileName","oldPath","newPath","destination","method","Content-Type","body","createFolder","folder","trim","directory","removeItems","filenames","recursive","moveItems","copyItems","uploadFiles","formData","FormData","forEach","append","getActionsByMultipleFiles","files","acts","file","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","e","Math","log","pow","toFixed","refreshFileList","dispatch","getState","setLoading","setSelectedFiles","APIHandler","join","r","setFileList","toString","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setVisibleDialogCreateFolder","visible","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogCopy","setVisibleDialogContent","setVisibleDialogEdit","setFileContent","percentage","File","_this$props","this","props","isSelected","size","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","_react_16_13_1_react_default","createElement","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","secondary","Component","connect","ownProps","filePath","event","lastFile","stopPropagation","ctrlKey","shiftKey","_getState12","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","index","element","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","match","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","Boolean","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_UploadFileAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","enterToPreviousDirectoryByIndex","preventDefault","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","fileName","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","blobUrl","window","tempLink","document","href","setAttribute","click","CloudDownload_default","ContextMenu","x","y","actionsComp","act","component","ContextMenuActions_OpenAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_DownloadAction","ContextMenuActions_RemoveAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","lastBlobUrl","content","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","id","DialogContent_default","src","alt","DialogActions_default","handleOpen","_this2","text","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","TextField_default","autoFocus","label","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState10","canCopy","_getState11","UploadFileList","list","dense","List_default","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","setTimeout","target","Dialogs","Content","Edit","CreateFolder","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","handleHideContextMenu","tagName","store","createStore","applyMiddleware","thunk","fileBrowser","ReactDOM","render","_react_redux_5_1_2_react_redux_es","src_App","getElementById","console"],"mappings":"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","file":"static/js/main.6f66a530.chunk.js","sourcesContent":["export const defaultState = {\n    path: [],\n    pathSublist: [],\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogCreateFolder: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","const host = 'http://localhost:8000';\n\nexport default {\n    //url_list: `${host}/filemanager/list`,\n    url_list: `http://localhost:8080/analysis/email/file/browse/file`,\n    url_create_folder: `${host}/filemanager/dir/create`,\n    url_get_content: `${host}/filemanager/file/content`,\n    url_download: `${host}/filemanager/file/content`,\n    url_upload: `${host}/filemanager/items/upload`,\n    url_remove: `${host}/filemanager/items/remove`,\n    url_rename: `${host}/filemanager/item/move`,\n    url_move: `${host}/filemanager/items/move`,\n    url_copy: `${host}/filemanager/items/copy`,\n    url_edit: `${host}/filemanager/file/edit`,\n    url_compress: `${host}/filemanager/items/compress`,\n    url_extract: `${host}/filemanager/file/extract`,\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import * as API from './Api.js';\nimport config from './../config.js';\n\nconst messageTranslation = {\n    'unknown_response': 'Unknown error response from connector',\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\n};\n\n/**\n * Response handler for fetch responses\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Object}\n */\nconst handleFetch = (resolve, reject) => {\n    return {\n        xthen: (response) => {\n            const contentType = response.headers.get('content-type');\n            const contentDisp = response.headers.get('content-disposition');\n            const isJson = /(application|text)\\/json/.test(contentType);\n            const isAttachment = /attachment/.test(contentDisp);\n\n            if (! response.ok) {\n                if (isJson) {\n                    throw response.json();\n                }\n                throw Error(messageTranslation['unknown_response']);\n            }\n\n            if (isAttachment) {\n                response.blob().then(blob => {\n                    resolve(blob);\n                });\n                return;\n            }\n\n            if (isJson) {\n                response.json().then(json => {\n                    if (! json.success && json.code != \"200\") {\n                        throw new Error();\n                    }\n                    resolve(json.data);\n                });\n                return;\n            }\n        },\n        xcatch: (errorResponse) => {\n            // is thrown json\n            if (errorResponse && errorResponse.then) {\n                errorResponse.then(errJson => {\n                    return reject(errJson.errorMsg || JSON.stringify(errJson));\n                });\n            } else {\n                return reject(messageTranslation[errorResponse] || errorResponse);\n            }\n        }\n    }\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrive file liest\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileList = (path) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        return API.list(path)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileBody = (path, filename) => {\n    path = fixPath(path + '/' + filename);\n    return new Promise((resolve, reject) => {\n        return API.getFileContent(path)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameItem = (path, filename, newFileName) => {\n    const oldPath = fixPath(path + '/' + filename);\n    const newPath = fixPath(path + '/' + newFileName);\n\n    return new Promise((resolve, reject) => {\n        return API.rename(oldPath, newPath)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for create folder\n * @param {String} path\n * @param {String} folder\n * @returns {Object}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        if (! (folder || '').trim()) {\n            return reject('Invalid folder name');\n        }\n        return API.createDirectory(path, folder)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for remove file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const removeItems = (path, filenames, recursive = true) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to remove');\n        }\n        return API.remove(path, filenames, recursive)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for move file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to move');\n        }\n        return API.move(path, destination, filenames)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for copy file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to copy');\n        }\n        return API.copy(path, destination, filenames)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    return new Promise((resolve, reject) => {\n        if (! fileList.length) {\n            return reject('No files to upload');\n        }\n        return API.upload(path, fileList)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress'):\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit'):\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n        \n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract'):\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n\n        acts.push('copy');\n    }\n\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, excluding non coincidences\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only coincidences\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\n    });\n\n    if (files.length > 1) {\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import config from './../config.js';\n\n/**\n * Fetch API to list files from directory\n * @param {String} path\n * @returns {Object}\n */\nexport function list(path) {\n    return fetch(config.url_list + '?path=' + (encodeURIComponent(path) || '/'),{\n        credentials:\"include\"\n    });\n};\n\n\n/**\n * Fetch API to create a directory\n * @param {String} path\n * @param {String} directory\n * @returns {Object}\n */\nexport function createDirectory(path, directory) {\n    return fetch(config.url_create_folder, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, directory\n        })\n    });\n};\n\n\n/**\n * Fetch API to get file body\n * @param {String} path\n * @returns {Object}\n */\nexport function getFileContent(path) {\n    return fetch(config.url_get_content + '?path=' + (encodeURIComponent(path) || '/'));\n};\n\n\n/**\n * Fetch API to remove a file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function remove(path, filenames, recursive = true) {\n    return fetch(config.url_remove, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, filenames, recursive\n        })\n    });\n};\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function move(path, destination, filenames) {\n    return fetch(config.url_move, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination, filenames\n        })\n    });\n};\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function rename(path, destination) {\n    return fetch(config.url_rename, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination\n        })\n    });\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function copy(path, destination, filenames) {\n    return fetch(config.url_copy, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination, filenames\n        })\n    });\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport function upload(path, fileList, formData = new FormData()) {\n    [...fileList].forEach(f => {\n        formData.append('file[]', f);\n    });\n    formData.append('path', path);\n\n    return fetch(config.url_upload, {\n        method: 'POST',\n        body: formData, \n        headers: {\n            // a workaround for node connector, passing the path by header\n            path: path\n        }\n    });\n};\n","import * as APIHandler from '../Api/ApiHandler.js';\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n\n    APIHandler.getFileList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        // TODO workaround large files disables ui for long time\n        const blobUrl = window.URL.createObjectURL(blob);\n        let tempLink = window.document.createElement('a');\n        tempLink.href = blobUrl;\n        tempLink.setAttribute('download', fileName);\n        tempLink.click();\n        window.URL.revokeObjectURL(blobUrl);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                /*if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }*/\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            return;\n            /*event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));*/\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                我是一个比口袋还干净的文件夹，别笑！\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"可浏览根目录\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"搜索...\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n            {/*<ThreeDotsMenu />*/}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n        const actionsComp = acts.map((act, key) => {\n            let component;\n            if (act === 'open') {\n                component = <OpenAction key={key} />;\n            }\n            if (act === 'edit') {\n                component = <EditAction key={key} />;\n            }\n            if (act === 'copy') {\n                component = <CopyAction key={key} />;\n            }            \n            if (act === 'move') {\n                component = <MoveAction key={key} />;\n            }\n            if (act === 'rename') {\n                component = <RenameAction key={key} />;\n            }\n            if (act === 'download') {\n                component = <DownloadAction key={key} />;\n            }\n            if (act === 'remove') {\n                component = <RemoveAction key={key} />;\n            }\n            return component;\n        });\n\n        return (\n            <div> \n                <Menu \n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible} \n                    onClose={ () => {} } \n                    PaperProps={{ style: {width: 170} }}>\n                    { actionsComp }\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, handleSave, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n          <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n              <DialogContent>\n                  <DialogContentText>\n                    { this.state.loading ? 'Loading...' : textArea }\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                    Close\n                </Button>\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\n                    Update\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        createFolderName: state.createFolderName,\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName) => {\n            event.preventDefault();\n            dispatch(renameItem(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                {/*<div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>*/}\n                <div>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\n//import * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nwindow.fileBrowser = ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\nconsole.log(store);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.register();\n"],"sourceRoot":""}